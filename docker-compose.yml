version: '2'
services:
  web:
    restart: on-failure
    build:
        context: .
        args:
            PYTHON_VERSION: 3.11.1
            POETRY_VERSION: 1.3.2
    environment:
      - REDIS=redis://redis:6379/0
      - REDIS_CELERY=redis://redis:6379/1
      - TZ=Europe/Prague
      - DB=postgresql+psycopg2://postgres:example@db:5432/postgres
    volumes:
      - ./graphs.txt:/tmp/graphs.txt
    command: gunicorn -w 4 -b 0.0.0.0:8000 --log-level debug app:app
    ports:
      - "8088:8000"
    depends_on:
     - celery
     - redis
     - db
  celery:
    restart: always
    build:
        context: .
        args:
            PYTHON_VERSION: 3.11.1
            POETRY_VERSION: 1.3.2
    environment:
      - REDIS=redis://redis:6379/0
      - REDIS_CELERY=redis://redis:6379/1
      - TZ=Europe/Prague
      - DB=postgresql+psycopg2://postgres:example@db:5432/postgres
    volumes:
      - ./exclude.txt:/tmp/exclude.txt
    command: celery -A tsa.celery worker -l debug -Q high_priority,default,query,low_priority --pool=gevent -c 100
    depends_on:
      - redis
      - db
  beat:
    restart: always
    build:
        context: .
        args:
            PYTHON_VERSION: 3.11.1
            POETRY_VERSION: 1.3.2
    environment:
      - REDIS=redis://redis:6379/0
      - REDIS_CELERY=redis://redis:6379/1
      - TZ=Europe/Prague
      - DB=postgresql+psycopg2://postgres:example@db:5432/postgres
    command: celery -A tsa.celery beat -l warning
    depends_on:
      - redis
      - db
      - celery
  redis:
    restart: on-failure
    image: "redis:alpine"
    ports:
      - "6379:6379"
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - "5432:5432"
