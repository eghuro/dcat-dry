"""
Added common in Relationship.
Added ofn and processed in DatasetDistribution.
Added predicate table.

Revision ID: 96edbcb9c734
Revises: 06850d25958a
Create Date: 2023-02-10 13:04:29.666294

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from tsa.model import ProcessingStatus

# revision identifiers, used by Alembic.
revision = "96edbcb9c734"
down_revision = "06850d25958a"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("relationship", sa.Column("common", sa.String(), nullable=False))
    op.create_index(
        "relationship_index_common", "relationship", ["common"], postgresql_using="HASH"
    )
    op.add_column("dataset_distribution", sa.Column("ofn", sa.String(), nullable=True))
    processing_status = postgresql.ENUM(ProcessingStatus, name="processing_status")
    processing_status.create(op.get_bind(), checkfirst=True)
    op.add_column(
        "dataset_distribution",
        sa.Column(
            "processed",
            processing_status,
            nullable=False,
            default=ProcessingStatus.not_processed.name,
            server_default=ProcessingStatus.not_processed.name,
        ),
    )
    op.create_table(
        "predicate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("distribution_iri", sa.String(), nullable=False),
        sa.Column("iri", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_index(
        "predicate_index_iri",
        "predicate",
        ["iri"],
        postgresql_using="HASH",
    )

    op.create_index(
        "predicate_index", "predicate", ["distribution_iri", "iri"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("relationship_index_common", table_name="relationship")
    op.drop_index("predicate_index_iri", table_name="predicate")
    op.drop_index("predicate_index", table_name="predicate")
    op.drop_column("relationship", "common")
    op.drop_column("dataset_distribution", "ofn")
    op.drop_column("dataset_distribution", "processed")
    op.drop_table("predicate")
    processing_status = postgresql.ENUM(ProcessingStatus, name="processing_status")
    processing_status.drop(op.get_bind())
    # ### end Alembic commands ###
